gptModel()
})
#ours
output$ourModel <- renderPrint({
print(clusterModel)
})
output$ourModelPlot <- renderPlot({
plot(1:10, wcss, type = "b", xlab = "Number of Clusters", ylab = "WCSS")
})
#Blen plots
output$disPlot <- renderPlot({
ggplot(raceRisk, aes(x = Topic, fill = Break_Out)) +
geom_bar(position = "dodge", color = "black", stat = "count") +
labs(x = "Topic", y = "Count", title = "Risk Factors by Race") +
theme(axis.text.x = element_text(size = 7, angle = 35)) +
theme_minimal()
})
output$compPlot <- renderPlot({
ggplot(rrCounts, aes(x = Break_Out, y = Count, fill = Topic)) +
geom_bar(stat = "identity") +
labs(x = "Race", y = "Count", title = "Risk Factors by Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
output$racePlot <- renderPlot({
ggplot(raceOverall, aes(x = Stratification2, y = Data_Value)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Race", y = "Number oF Mortality Rate using the Data Value", title = "Mortality rate by Race")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui=ui, server=server)
library(ggplot2)
library(shiny)
library(leaflet)
library(tidyr)
library(shinydashboard)
library(dplyr)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main Menu", tabName = "main", icon = icon("home")),
#Kacper
menuItem("Smoking Rates", tabName = "smoking", icon = icon(""), #smoking
menuItem("State Rates", tabName = "smokingStates", icon = icon("chart-bar")),
menuItem("Big 2 Comparison", tabName = "smokingBig2", icon = icon("chart-bar"))
),
menuItem("Activity & Obesity Rates", tabName = "rates", icon = icon(""), #apple
menuItem("Overall Rates", tabName = "overall",
menuSubItem("Physical Activity Rates", tabName = "pa", icon = icon("percentage")),
menuSubItem("Obesity Rates", tabName = "ob", icon = icon("percentage"))
),
menuItem("Stratificaitons", tabName = "stratification",
menuSubItem("Education", tabName = "education", icon = icon("chart-line")),
menuSubItem("Age", tabName = "age", icon = icon("chart-line")),
menuSubItem("Gender", tabName = "gender", icon = icon("chart-line")),
menuSubItem("Income", tabName = "income", icon = icon("chart-line"))
)
),
#Zach
menuItem("Gender Comparison", tabName = "genderComparison", #male
menuItem("Overview", tabName = "summary", icon = icon("info-circle")),
menuItem("State Stratification", tabName = "state",
menuSubItem("North v. South", tabName = "northSouth", icon = icon("compass")),
menuSubItem("Geospatials", tabName = "geo", icon = icon("globe"))
),
menuItem("Models", tabName = "model",
menuSubItem("Ours v. GPT", tabName = "gpt", icon = icon("gear"))
)
),
#Blen
menuItem("Risk Factors by Race", tabName = "rfr",
menuSubItem("Disease Stratification", tabName = "dis", icon = icon("virus")),
menuSubItem("Comparison", tabName = "comp", icon = icon("bacteria"))
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Heart Disease Mortality Analysis"),
h4("This Shiny App takes on a Heart Disease Mortality Rate in the USA Dataset and performs
an analysis on it. Many techniques are used to see trends, correlations, as well as even
prediction-based models. As you go through the shiny app, you will be able to see how we
(Kacper, Zach, & Blen) made graphs and conclusions based on our analysis. Also worth noting
below is an interactive geospatial map that allows you to see each state's Mortality rates
from Heart Disease."),
leafletOutput("mainLeaf"),
p("Below shows the Top 10 States that have the highest number of deaths as well as the lowest number
of deaths from Heart Disease."),
plotOutput("top"),
plotOutput("bot"),
),
#smoking rates
tabItem(tabName = "smokingStates",
h2("Three States of Choice"),
h4("This Section takes on a Smoking Rates Dataset and runs an analysis on its correlation
with Heart Disease Mortality Rates."),
verbatimTextOutput("threeSummary"),
plotOutput("threeStates"),
p("Above shows the three states that are used in the sections 'Smoking Rates'
& 'Activity & Obesity Rates' to run an analysis on. As stated above, these states represent different
spectrums of Heart Disease Mortality Rates."),
h2("Smoking Rates among States"),
plotOutput("smokingStates"),
p("Here shows a stacked bar chart of the difference between states and the responses. As you can see, it
is mainly fairly similar across all the responses except for a few areas such as Current and Former."),
),
tabItem(tabName = "smokingBig2",
h2("Current vs. Former Smoker Correlation?"),
h4(""),
plotOutput("smokingBig2.1"),
p("Above shows the percentages for each state and their responses for smoking.
The two main differences across the states are Current and Former. As you can see, Minnesota has a
significant difference between the 'Current' response and Mississippi's response for the respective area.
Below shows the differences in a better sense where one can actually see how big these differences are.
It is possible that the difference in Current vs. Former smokers may have an impact on the mortality rate."),
plotOutput("smokingBig2.2")
),
#risk factors obesity and activity
tabItem(tabName = "pa",
h2("Physical Activity Rates across Time"),
h4("As you can see, we are still using those three states to run comparisons on.
Below shows the differences over time in percentages of different forms of activity rates.
One can notice how Minnesota, the lowest mortality rate, has much higher rates than the other two.
Mississippi can be seen having the lowest overall percentage in activity rates."),
plotOutput("overallPA")
),
tabItem(tabName = "ob",
h2("Obesity Rates across Time"),
h4("Here is the same as Physical Activity rates, however, it is with Obesity rates.
One can see how overall Mississippi has higher rates than the other two states and
how each respective state has similar trends to their relative mortality rates. Minnesota
has the lowest overall, Pennsylvania right in the middle, and Mississippi with the highest as
stated above."),
plotOutput("overallOB"),
),
tabItem(tabName = "education",
h2("Rates based on Education"),
h4("Here are two graphs with a lot of information! You can see the differences by state and how each one
has different percentages over time and in general. As usual, you can see how, with the positive aspects,
Minnesota is above the other states, and Pennsylvania is usually above Mississippi."),
p("Below is Activity Rates by Education"),
plotOutput("eduPA"),
p("Below is Obesity Rates by Education"),
plotOutput("eduOB"),
),
tabItem(tabName = "age",
h2("Rates based on Age"),
h4("As with the previous tab, for the positive aspects of the graphs and percentages for the rates, Minnesota
comes up on top and Mississippi is down below. These few graphs I have shown truly show how many factors play into
the mortality rate and that it simply isn't one factor. There are major differences in this analysis based on Age, as one can see."),
p("Below is Activity Rates by Age"),
plotOutput("agePA"),
p("Below is Obesity Rates by Age"),
plotOutput("ageOB"),
),
tabItem(tabName = "gender",
h2("Rates based on Gender"),
h4("Now, one can truly see how the negative aspects (obesity rates and No activity) have higher percentages in Mississippi, and the
positive aspects are much more prominent in Minnesota and Pennsylvania. It is interesting how it does change by state, though, which
Gender has different percentages. Could it be based on overall culture or other factors presented in this Shiny app?"),
p("Below is Activity Rates by Gender"),
plotOutput("genderPA"),
p("Below is Obesity Rates by Gender"),
plotOutput("genderOB"),
),
tabItem(tabName = "income",
h2("Rates based on Income"),
h4("As with the previous tabs, for the positive aspects of the graphs and percentages for the rates, Minnesota emerges on top and Mississippi
remains at the lower end. These few graphs I have shown truly highlight the multitude of factors influencing the mortality rate, demonstrating
that it is not determined by a single factor alone. Similarly, when examining the data through the lens of gender, significant disparities
become apparent. The analysis reveals major differences in mortality rates between males and females, emphasizing the role of gender
as a contributing factor. Furthermore, comparing the states in the graphs, it is evident that each state exhibits distinct percentages
over time and in general. Once again, Minnesota consistently ranks higher in positive aspects, while Pennsylvania tends to surpass Mississippi."),
p("Below is Activity Rates by Income"),
plotOutput("incomePA"),
p("Below is Obesity Rates by Income"),
plotOutput("incomeOB"),
),
#Zach
tabItem(tabName = "summary",
h2("Overview"),
h4("Below shows the Aggregate Totals divided by Gender. This allows us to briefly understand how drastic the difference
is between females and males!"),
plotOutput("summary")
),
tabItem(tabName = "northSouth",
h2("North"),
plotOutput("north"),
h2("South"),
plotOutput("south"),
h4("As one can see, The North has a significant difference between Females and Males in Mortality Rates than the South does.
This, as in other tabs, has been seen as the case. However, this allows us to truly see the drastic difference."),
),
tabItem(tabName = "geo",
h2("Northern Geospatial"),
leafletOutput("geoMapNorth"),
h2("Southern Geospatial"),
leafletOutput("geoMapSouth"),
h4("Above shows a sample of the geospatial map for both northern and southern states and the data collected. One can see how there
are differences in the amount of data collected in different areas across the USA."),
),
tabItem(tabName = "gpt",
h2("GPT-Model"),
verbatimTextOutput("ourModel"),
plotOutput("ourModelPlot"),
h4("The article “A K-Means Approach to Clustering Disease Progressions” presents a k-means inspired approach to clustering disease
progression data. The proposed method represents a cluster as a set of weights corresponding to a set of splines fitted to the
time series data and uses the “goodness-of-fit” as a way to assign time series to clusters. https://ieeexplore.ieee.org/document/8031156
Link to article."),
h2("Our-Model"),
verbatimTextOutput("gptModel"),
h4("The linear regression model aims to provide value of the correlation between gender and the likelihood of having Heart Disease.")
),
tabItem(tabName = "dis",
h2("Overall Mortality by Race"),
plotOutput("racePlot"),
h4("Above shows the severity in differences across races in the summation of total deaths from Heart Disease.
One can see that Black and White are on the top end of the spectrum, while Asian is on the lower end."),
h2("Risk Factors with Disease Stratification"),
plotOutput("disPlot"),
h4("This visual is an accurate version of the data. The data indicates that the prevalence of risk factors does not significantly differ across different races.")
),
tabItem(tabName = "comp",
h2("Comparison Amongst Races"),
plotOutput("compPlot"),
h4("This visualization shows risk factors by race. It suggests that there are minimal variations among racial groups for each specific risk factor. ")
)
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
summaryData <- readRDS("summaryData.rds")
northData <- readRDS("northData.rds")
southData <- readRDS("southData.rds")
modelData <- readRDS("modelData.rds")
northLeaf <- readRDS("northLeaf.rds")
southLeaf <- readRDS("southLeaf.rds")
clusterModel <- readRDS("clusterModel.rds")
wcss <- readRDS("wcss.rds")
#Blen Data
raceRisk <- readRDS("raceRisk.rds")
rrCounts <- readRDS("rrCounts.rds")
bottomTen <- readRDS("bottomTen.rds")
topTen <- readRDS("topTen.rds")
map <- readRDS("map.rds")
raceOverall <- readRDS("raceOverall.rds")
mapMainData <- readRDS("mapMainData.rds")
#main Menu
output$mainLeaf <- renderLeaflet ({
leaflet() %>%
addTiles() %>%
setView(lng = -95.7129, lat = 37.0902, zoom = 4) %>%
addCircleMarkers(data = mapMainData,
lng = ~long,
lat = ~lat,
radius = 5,
color = "red",
fillOpacity = 0.5,
popup = ~paste("Sum_Data Values: ", Sum_Data_Values, "<br>Data Value Unit: ", Data_Value_Unit))
})
output$top <- renderPlot({
ggplot(topTen, aes(x = LocationDesc, y = Sum_Data_Values)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "State", y = "Number Of Death", title = "Top Ten States By Death") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0,8000)
})
output$bot<- renderPlot({
ggplot(bottomTen, aes(x = LocationDesc, y = Sum_Data_Values)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "State", y = "Number Of Death", title = "Bottom Ten States By Death") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(0,8000)
})
#Smoking Rates
output$threeSummary <- renderPrint({
summary(HDMDthreeStates$Data_Value)
})
output$threeStates <- renderPlot({
ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
output$smokingStates <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$smokingBig2.1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = Response)) +
geom_bar(stat = "identity") +
geom_text(aes(label = round(average_percentage, 1)), vjust = -.2) +
facet_wrap(~ LocationDesc, scales = "free_x") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
output$smokingBig2.2 <- renderPlot({
ggplot(smokingRateBig2, aes(x = LocationDesc, y = diff, fill = diff > 0)) +
geom_bar(stat = "identity", width = 0.5) +
labs(x = "Location", y = "Difference between Current and Former", title = "Difference Comparison") +
scale_fill_manual(values = c("red", "light green"), guide = FALSE) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
# risk factors obesity and activity
#overall
output$overallPA <- renderPlot({
ggplot(rfActivityRatesTime, aes(x = YearStart, y = Data_Value, color = Question)) +
geom_line() +
facet_wrap(~ LocationDesc, scales = "free", ncol = 1) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 60)
})
output$overallOB <- renderPlot({
ggplot(rfObesityRatesTime, aes(x = YearStart, y = Data_Value, color = Question)) +
geom_line() +
facet_wrap(~ LocationDesc, scales = "free", ncol = 1) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 60)
})
#education
output$eduPA <- renderPlot({
ggplot(rfpaEducationEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
output$eduOB <- renderPlot({
ggplot(rfobEducationEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
#age
output$agePA <- renderPlot({
ggplot(rfpaAgeEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
output$ageOB <- renderPlot({
ggplot(rfobAgeEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
#gender
output$genderPA <- renderPlot({
ggplot(rfpaGenderEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
output$genderOB <- renderPlot({
ggplot(rfobGenderEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
#income
output$incomePA <- renderPlot({
ggplot(rfpaIncomeEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
output$incomeOB <- renderPlot({
ggplot(rfobIncomeEffectTime, aes(x = YearStart, y = Data_Value, color = Stratification)) +
geom_line() +
facet_wrap(~LocationDesc + Question, scales = "free", ncol = 2) +
labs(x = "Year", y = "Data Value") +
theme_minimal() +
ylim(0, 70)
})
#Zach part
output$summary <- renderPlot({
ggplot(data = summaryData, aes(x = Stratification1, y = Data_Value.x, fill = Stratification1)) +
geom_bar(stat = "identity", position = "dodge") +
geom_errorbar(aes(ymin = Data_Value.x - Data_Value.y, ymax = Data_Value.x + Data_Value.y),
position = position_dodge(width = 0.9), width = 0.2) +
scale_fill_manual(values = c("pink", "blue")) +
labs(x = "Gender", y = "Heart Disease Mortality Rate",
title = "Aggregate Total of Heart Disease Mortality By Gender") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10)))
})
output$south <- renderPlot({
ggplot(data = southData, aes(x = Stratification1, y = Data_Value, fill = Stratification1)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pink", "blue"), guide = FALSE) +
labs(x = "Gender", y = "Heart Disease Mortality Rate",
title = "Comparison of Heart Disease Mortality Rates by Gender") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10)),
legend.position = "none") +
coord_cartesian(ylim = c(0, max(southData$Data_Value) * 1.1))
})
output$north <- renderPlot({
ggplot(data = northData, aes(x = Stratification1, y = Data_Value, fill = Stratification1)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pink", "blue"), guide = FALSE) +
labs(x = "Gender", y = "Heart Disease Mortality Rate",
title = "Comparison of Heart Disease Mortality Rates by Gender") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_text(margin = margin(t = 10)),
axis.title.y = element_text(margin = margin(r = 10)),
legend.position = "none") +
coord_cartesian(ylim = c(0, max(northData$Data_Value) * 1.1))
})
#spatials
output$geoMapNorth <- renderLeaflet ({
leaflet(northLeaf) %>%
addTiles() %>%
addMarkers(lng = ~long,
lat = ~lat,
popup = ~n)
})
output$geoMapSouth <- renderLeaflet ({
leaflet(southLeaf) %>%
addTiles() %>%
addMarkers(lng = ~long,
lat = ~lat,
popup = ~n)
})
#models
#gpt
gptModel <- reactive({
model <- lm(total_n ~ Data_Value, data = modelData)
summary(model)
})
output$gptModel <- renderPrint({
gptModel()
})
#ours
output$ourModel <- renderPrint({
print(clusterModel)
})
output$ourModelPlot <- renderPlot({
plot(1:10, wcss, type = "b", xlab = "Number of Clusters", ylab = "WCSS")
})
#Blen plots
output$disPlot <- renderPlot({
ggplot(raceRisk, aes(x = Topic, fill = Break_Out)) +
geom_bar(position = "dodge", color = "black", stat = "count") +
labs(x = "Topic", y = "Count", title = "Risk Factors by Race") +
theme(axis.text.x = element_text(size = 7, angle = 35)) +
theme_minimal()
})
output$compPlot <- renderPlot({
ggplot(rrCounts, aes(x = Break_Out, y = Count, fill = Topic)) +
geom_bar(stat = "identity") +
labs(x = "Race", y = "Count", title = "Risk Factors by Race") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
output$racePlot <- renderPlot({
ggplot(raceOverall, aes(x = Stratification2, y = Data_Value)) +
geom_bar(stat = "identity", fill = "blue") +
labs(x = "Race", y = "Number oF Mortality Rate using the Data Value", title = "Mortality rate by Race")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
})
}
shinyApp(ui=ui, server=server)
