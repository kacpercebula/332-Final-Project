verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
plotOutput("subsetPlot1")
),
tabPanel("Subset 2",
plotOutput("subsetPlot2")
)
# Add more subset tabs as needed
)
)
# Add more tab items as needed
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
#Blen Data
output$summary <- renderPrint({
summary(HDMDthreeStates$Data_Value)
})
# Data visualization
output$plot <- renderPlot({
ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
#subset plots
output$subsetPlot1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$subsetPlot2 <- renderPlot({
ggplot(smokingRateAvg, aes(x = LocationDesc, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location", y = "Average Percentage", title = "Average Percentage by Location, Grouped by Response") +
theme_minimal() +
theme(legend.position = "right")
})
}
shinyApp(ui=ui, server=server)
View(ui)
library(dplyr)
library(stringr)
library(tidyr)
library(ggplot2)
library(wordcloud)
library(sentimentr)
library(reshape2)
library(readr)
library(shiny)
library(DT)
library(lubridate)
library(tidyverse)
library(data.table)
library(leaflet)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main", tabName = "main", icon = icon("home")),
menuItem("Subset", tabName = "subset", icon = icon("list-alt"),
menuSubItem("Subset 1", tabName = "subset1"),
menuSubItem("Subset 2", tabName = "subset2")
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Main Section"),
verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
plotOutput("subsetPlot1")
),
tabPanel("Subset 2",
plotOutput("subsetPlot2")
)
# Add more subset tabs as needed
)
)
# Add more tab items as needed
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
#Blen Data
# output$summary <- renderPrint({
#   summary(HDMDthreeStates$Data_Value)
# })
# Data visualization
# output$plot <- renderPlot({
#   ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
#     geom_bar(stat = "identity") +
#     labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
#     theme_minimal() +
#     theme(axis.text.x = element_text(size = 7, angle = 25)) +
#     theme(legend.position = "none")
# })
#subset plots
output$subsetPlot1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$subsetPlot2 <- renderPlot({
ggplot(smokingRateAvg, aes(x = LocationDesc, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location", y = "Average Percentage", title = "Average Percentage by Location, Grouped by Response") +
theme_minimal() +
theme(legend.position = "right")
})
}
shinyApp(ui=ui, server=server)
#library(dplyr)
#library(stringr)
#library(tidyr)
library(ggplot2)
#library(wordcloud)
#library(sentimentr)
#library(reshape2)
#library(readr)
library(shiny)
#library(DT)
#library(lubridate)
#library(tidyverse)
#library(data.table)
#library(leaflet)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main", tabName = "main", icon = icon("home")),
menuItem("Subset", tabName = "subset", icon = icon("list-alt"),
menuSubItem("Subset 1", tabName = "subset1"),
menuSubItem("Subset 2", tabName = "subset2")
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Main Section"),
verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
plotOutput("subsetPlot1")
),
tabPanel("Subset 2",
plotOutput("subsetPlot2")
)
# Add more subset tabs as needed
)
)
# Add more tab items as needed
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
#Blen Data
output$summary <- renderPrint({
summary(HDMDthreeStates$Data_Value)
})
# Data visualization
output$plot <- renderPlot({
ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
#subset plots
output$subsetPlot1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$subsetPlot2 <- renderPlot({
ggplot(smokingRateAvg, aes(x = LocationDesc, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location", y = "Average Percentage", title = "Average Percentage by Location, Grouped by Response") +
theme_minimal() +
theme(legend.position = "right")
})
}
shinyApp(ui=ui, server=server)
#library(dplyr)
#library(stringr)
#library(tidyr)
library(ggplot2)
#library(wordcloud)
#library(sentimentr)
#library(reshape2)
#library(readr)
library(shiny)
#library(DT)
#library(lubridate)
#library(tidyverse)
#library(data.table)
#library(leaflet)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main", tabName = "main", icon = icon("home")),
menuItem("Subset", tabName = "subset", icon = icon("list-alt"),
menuSubItem("Subset 1", tabName = "subset1"),
menuSubItem("Subset 2", tabName = "subset2")
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Main Section"),
verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
tabeName = "subset1"
plotOutput("subsetPlot1")
#library(dplyr)
#library(stringr)
#library(tidyr)
library(ggplot2)
#library(wordcloud)
#library(sentimentr)
#library(reshape2)
#library(readr)
library(shiny)
#library(DT)
#library(lubridate)
#library(tidyverse)
#library(data.table)
#library(leaflet)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main", tabName = "main", icon = icon("home")),
menuItem("Subset", tabName = "subset", icon = icon("list-alt"),
menuSubItem("Subset 1", tabName = "subset1"),
menuSubItem("Subset 2", tabName = "subset2")
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Main Section"),
verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
tabeName = "subset1",
plotOutput("subsetPlot1")
),
tabPanel("Subset 2",
plotOutput("subsetPlot2")
)
# Add more subset tabs as needed
)
)
# Add more tab items as needed
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
#Blen Data
output$summary <- renderPrint({
summary(HDMDthreeStates$Data_Value)
})
# Data visualization
output$plot <- renderPlot({
ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
#subset plots
output$subsetPlot1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$subsetPlot2 <- renderPlot({
ggplot(smokingRateAvg, aes(x = LocationDesc, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location", y = "Average Percentage", title = "Average Percentage by Location, Grouped by Response") +
theme_minimal() +
theme(legend.position = "right")
})
}
shinyApp(ui=ui, server=server)
#library(dplyr)
#library(stringr)
#library(tidyr)
library(ggplot2)
#library(wordcloud)
#library(sentimentr)
#library(reshape2)
#library(readr)
library(shiny)
#library(DT)
#library(lubridate)
#library(tidyverse)
#library(data.table)
#library(leaflet)
library(shinydashboard)
ui <- dashboardPage(
dashboardHeader(),
dashboardSidebar(
sidebarMenu(
menuItem("Main", tabName = "main", icon = icon("home")),
menuItem("Subset", tabName = "subset", icon = icon("list-alt"),
menuSubItem("Subset 1", tabName = "subset1"),
menuSubItem("Subset 2", tabName = "subset2")
),
# Add more menu items as needed
# Style the sidebar to enable scrolling
tags$style(".sidebar { overflow-y: auto; max-height: calc(100vh - 80px); }")
)
),
dashboardBody(
tabItems(
tabItem(tabName = "main",
h2("Main Section"),
verbatimTextOutput("summary"),
plotOutput("plot")
),
tabItem(tabName = "subset",
h2("Subset Section"),
tabsetPanel(
tabPanel("Subset 1",
tabName = "subset1",
plotOutput("subsetPlot1")
),
tabPanel("Subset 2",
plotOutput("subsetPlot2")
)
# Add more subset tabs as needed
)
)
# Add more tab items as needed
)
)
)
server <- function(input, output) {
#All the data Kacper
HDMDthreeStates <- readRDS("HDMDthreeStates .rds")
smokingRateStates <- readRDS("smokingRateStates.rds")
smokingRateAvg <- readRDS("smokingRateAvg.rds")
smokingRateBig2 <- readRDS("smokingRateBig2.rds")
rfActivityRatesTime <- readRDS("rfActivityRatesTime.rds")
rfObesityRatesTime <- readRDS("rfObesityRatesTime.rds")
rfpaAgeEffectTime <- readRDS("rfpaAgeEffectTime.rds")
rfobAgeEffectTime <- readRDS("rfobAgeEffectTime.rds")
rfpaEducationEffectTime <- readRDS("rfpaEducationEffectTime.rds")
rfobEducationEffectTime <- readRDS("rfobEducationEffectTime.rds")
rfpaGenderEffectTime <- readRDS("rfpaGenderEffectTime.rds")
rfobGenderEffectTime <- readRDS("rfobGenderEffectTime.rds")
rfpaIncomeEffectTime <- readRDS("rfpaIncomeEffectTime.rds")
rfobIncomeEffectTime <- readRDS("rfobIncomeEffectTime.rds")
#Zach Data
#Blen Data
output$summary <- renderPrint({
summary(HDMDthreeStates$Data_Value)
})
# Data visualization
output$plot <- renderPlot({
ggplot(HDMDthreeStates, aes(x = LocationDesc, y = Data_Value, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "State", y = "Value (per 100,000)", title = "Best, Worst, Middle States for heart Disease") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 25)) +
theme(legend.position = "none")
})
#subset plots
output$subsetPlot1 <- renderPlot({
ggplot(smokingRateStates, aes(x = Response, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity") +
labs(x = "Response", y = "Average Percentage", title = "Average Percentage by Response and Location") +
theme_minimal() +
theme(axis.text.x = element_text(size = 7, angle = 15)) +
theme(legend.position = "right")
})
output$subsetPlot2 <- renderPlot({
ggplot(smokingRateAvg, aes(x = LocationDesc, y = average_percentage, fill = LocationDesc)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Location", y = "Average Percentage", title = "Average Percentage by Location, Grouped by Response") +
theme_minimal() +
theme(legend.position = "right")
})
}
shinyApp(ui=ui, server=server)
